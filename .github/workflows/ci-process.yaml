name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check_yaml_syntax:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: check files
      run: ls -la ./app-web/app/data

    - name: yaml-lint
      uses: ibiqlik/action-yamllint@v3
      with:
        file_or_dir: ./app-web/app/data

  build_docker_images:
    needs: [check_yaml_syntax]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Print result
        run: echo "*.yaml files are OK"

      - name: Build the Docker image 1
        run: docker build . -f ./app-web/Dockerfile --file Dockerfile --tag mbps54/app-web:latest

      - name: Build the Docker image 2
        run: docker build . -f ./app-exchange/Dockerfile --file Dockerfile --tag mbps54/app-exchange:latest

      - name: Create Docker Network
        run: docker network create -d bridge multi-host-network

      - name: Start the DB
        run: docker run -d -p 6379:6379 --network=multi-host-network redis:latest

      - name: Start the Docker image 1
        run: docker run -d -e DB_NAME_IP='redis' --network=multi-host-network mbps54/app-exchange:latest

      - name: Start the Docker image 1
        run: docker run -it -p 8000:8000 -e DB_NAME_IP='redis' --network=multi-host-network mbps54/app-web:latest

#      - name: curl
#        uses: wei/curl@master
#        with:
#          args: http://localhost:8000

      - name: Login to Docker Registry
        run: docker login -u "$DOCKER_USERNAME" --password-stdin <<< "$DOCKER_PASSWORD"
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push the Docker image 1
        run: docker push mbps54/app-web:latest

      - name: Push the Docker image 2
        run: docker push mbps54/app-exchange:latest

  deploy_on_aws:
    needs: [build_docker_images]
    runs-on: ubuntu-latest
    steps:
      - name: Print result
        run: echo "Docker image is created successfully"

      - name: Deploy code to web server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
                cd web_doc_app
                git pull origin master
                docker stop $(docker ps -aq)
                docker rm $(docker ps -aq)
                docker rmi $(docker images -q)
                docker pull redis:latest
                docker pull mbps54/app-exchange:latest
                docker pull app-web:latest
                docker network create -d bridge multi-host-network
                docker run -d -p 6379:6379 --network=multi-host-network redis:latest
                docker run -d -e DB_NAME_IP='redis' --network=multi-host-network mbps54/app-exchange:latest
                docker run -d -p 8000:8000 -e DB_NAME_IP='redis' --network=multi-host-network mbps54/app-web:latest
